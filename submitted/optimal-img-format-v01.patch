# HG changeset patch
# User Nicolas Silva <nsilva@mozilla.com>
# Date 1338314068 14400
# Node ID 6f82bacef9fe725f74b2d7f878c27166911e7800
# Parent  e8741f6e1be5dd68255dfa5b0ef6c116066770f9
Moves OptimalFormatFor from ShadowLayers.cpp to gfxAsurface.h in order to be able to reuse it.

diff --git a/gfx/layers/ipc/ShadowLayers.cpp b/gfx/layers/ipc/ShadowLayers.cpp
--- a/gfx/layers/ipc/ShadowLayers.cpp
+++ b/gfx/layers/ipc/ShadowLayers.cpp
@@ -337,36 +337,16 @@ ShadowLayerForwarder::EndTransaction(Inf
     }
   }
 
   mIsFirstPaint = false;
   MOZ_LAYERS_LOG(("[LayersForwarder] ... done"));
   return true;
 }
 
-static gfxASurface::gfxImageFormat
-OptimalFormatFor(gfxASurface::gfxContentType aContent)
-{
-  switch (aContent) {
-  case gfxASurface::CONTENT_COLOR:
-#ifdef MOZ_GFX_OPTIMIZE_MOBILE
-    return gfxASurface::ImageFormatRGB16_565;
-#else
-    return gfxASurface::ImageFormatRGB24;
-#endif
-  case gfxASurface::CONTENT_ALPHA:
-    return gfxASurface::ImageFormatA8;
-  case gfxASurface::CONTENT_COLOR_ALPHA:
-    return gfxASurface::ImageFormatARGB32;
-  default:
-    NS_NOTREACHED("unknown gfxContentType");
-    return gfxASurface::ImageFormatARGB32;
-  }
-}
-
 static SharedMemory::SharedMemoryType
 OptimalShmemType()
 {
 #if defined(MOZ_PLATFORM_MAEMO) && defined(MOZ_HAVE_SHAREDMEMORYSYSV)
   // Use SysV memory because maemo5 on the N900 only allots 64MB to
   // /dev/shm, even though it has 1GB(!!) of system memory.  Sys V shm
   // is allocated from a different pool.  We don't want an arbitrary
   // cap that's much much lower than available memory on the memory we
diff --git a/gfx/thebes/gfxASurface.cpp b/gfx/thebes/gfxASurface.cpp
--- a/gfx/thebes/gfxASurface.cpp
+++ b/gfx/thebes/gfxASurface.cpp
@@ -48,16 +48,36 @@
 #include "nsServiceManagerUtils.h"
 #include "nsStringGlue.h"
 #include "nsIClipboardHelper.h"
 
 using mozilla::CheckedInt;
 
 static cairo_user_data_key_t gfxasurface_pointer_key;
 
+gfxASurface::gfxImageFormat
+OptimalFormatFor(gfxASurface::gfxContentType aContent)
+{
+  switch (aContent) {
+  case gfxASurface::CONTENT_COLOR:
+#ifdef MOZ_GFX_OPTIMIZE_MOBILE
+    return gfxASurface::ImageFormatRGB16_565;
+#else
+    return gfxASurface::ImageFormatRGB24;
+#endif
+  case gfxASurface::CONTENT_ALPHA:
+    return gfxASurface::ImageFormatA8;
+  case gfxASurface::CONTENT_COLOR_ALPHA:
+    return gfxASurface::ImageFormatARGB32;
+  default:
+    NS_NOTREACHED("unknown gfxContentType");
+    return gfxASurface::ImageFormatARGB32;
+  }
+}
+
 // Surfaces use refcounting that's tied to the cairo surface refcnt, to avoid
 // refcount mismatch issues.
 nsrefcnt
 gfxASurface::AddRef(void)
 {
     if (mSurfaceValid) {
         if (mFloatingRefs) {
             // eat a floating ref
diff --git a/gfx/thebes/gfxASurface.h b/gfx/thebes/gfxASurface.h
--- a/gfx/thebes/gfxASurface.h
+++ b/gfx/thebes/gfxASurface.h
@@ -380,9 +380,12 @@ public:
   {
     NS_ASSERTION(NS_IsMainThread(),
                  "Can only add a reference on the main thread");
     aRawRef->AddRef();
   }
 };
 
 #endif
+
+gfxASurface::gfxImageFormat OptimalFormatFor(gfxASurface::gfxContentType aContent);
+
 #endif /* GFX_ASURFACE_H */
